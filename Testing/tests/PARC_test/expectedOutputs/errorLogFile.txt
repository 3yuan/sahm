standard out:


R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###############################################################################
> ##
> ## Copyright (C) 20010-2012, USGS Fort Collins Science Center. 
> ## All rights reserved.
> ## Contact: talbertc@usgs.gov
> ##
> ## This file is part of the Software for Assisted Habitat Modeling package
> ## for VisTrails.
> ##
> ## "Redistribution and use in source and binary forms, with or without 
> ## modification, are permitted provided that the following conditions are met:
> ##
> ##  - Redistributions of source code must retain the above copyright notice, 
> ##    this list of conditions and the following disclaimer.
> ##  - Redistributions in binary form must reproduce the above copyright 
> ##    notice, this list of conditions and the following disclaimer in the 
> ##    documentation and/or other materials provided with the distribution.
> ##  - Neither the name of the University of Utah nor the names of its 
> ##    contributors may be used to endorse or promote products derived from 
> ##    this software without specific prior written permission.
> ##
> ## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
> ## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
> ## THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
> ## PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
> ## CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
> ## EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
> ## PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
> ## OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
> ## WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
> ## OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
> ## ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
> ##
> ## Although this program has been used by the U.S. Geological Survey (USGS), 
> ## no warranty, expressed or implied, is made by the USGS or the 
> ## U.S. Government as to the accuracy and functioning of the program and 
> ## related program material nor shall the fact of distribution constitute 
> ## any such warranty, and no responsibility is assumed by the USGS 
> ## in connection therewith.
> ##
> ## Any use of trade, firm, or product names is for descriptive purposes only 
> ## and does not imply endorsement by the U.S. Government.
> ###############################################################################
> 
> make.p.tif=T
> make.binary.tif=T
> 
> tc=NULL
> n.folds=3
> alpha=1
> 
> learning.rate = NULL
> bag.fraction = 0.5
> prev.stratify = TRUE
> max.trees = 10000
> tolerance.method = "auto"
> tolerance = 0.001
> seed=NULL
> opt.methods=2
> save.model=TRUE
> MESS=FALSE
> 
> # Interpret command line argurments #
> # Make Function Call #
> Args <- commandArgs(trailingOnly=FALSE)
> 
>     for (i in 1:length(Args)){
+      if(Args[i]=="-f") ScriptPath<-Args[i+1]
+      }
> 
>     for (arg in Args) {
+     	argSplit <- strsplit(arg, "=")
+     	argSplit[[1]][1]
+     	argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="c") csv <- argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="o") output <- argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="rc") responseCol <- argSplit[[1]][2]
+    		if(argSplit[[1]][1]=="mpt") make.p.tif <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="mbt")  make.binary.tif <- as.logical(argSplit[[1]][2])
+       if(argSplit[[1]][1]=="tc")  tc <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="nf")  n.folds <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="alp")  alpha <- as.numeric(argSplit[[1]][2])
+       if(argSplit[[1]][1]=="lr")  learning.rate <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="bf")  bag.fraction <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="ps")  prev.stratify <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="mt")  max.trees <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="om")  opt.methods <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="seed")  seed <- as.numeric(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="savm")  save.model <- as.logical(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="tolm")  tolerance.method <- argSplit[[1]][2]
+  		  if(argSplit[[1]][1]=="tol")  tolerance <- as.numeric(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="mes")  MESS <-as.logical(argSplit[[1]][2])
+  			
+     }
> 
> ScriptPath<-dirname(ScriptPath)
> source(paste(ScriptPath,"LoadRequiredCode.r",sep="\\"))
> source(paste(ScriptPath,"BRT.helper.fcts.r",sep="\\"))
> 
> save.model<-make.p.tif | make.binary.tif
> 
> 
>     FitModels(ma.name=csv,
+ 		tif.dir=NULL,
+ 		output.dir=output,
+ 		response.col=responseCol,
+ 		make.p.tif=make.p.tif,make.binary.tif=make.binary.tif,
+ 		simp.method="cross-validation",debug.mode=F,responseCurveForm="pdf",tc=tc,n.folds=n.folds,alpha=alpha,script.name="brt",
+ 		learning.rate =learning.rate, bag.fraction = bag.fraction,prev.stratify = prev.stratify,max.trees = max.trees,seed=seed,
+     save.model=save.model,opt.methods=opt.methods,MESS=MESS,tolerance.method = tolerance.method,tolerance=tolerance)
Loaded gbm 1.6-3.1 

 romoveg 
   Factor Name Factor Count
1            1            2
2            2            2
3            3            5
4            4            1
5            5            1
6            7           32
7            8            1
8            9            1
9           12            7
10          14            4
11          17            1
12          19            5
13          20            1
14          22            4
15          23           35
16          24           21
17          26            1
18          31            2
19          37           10
20          38            1
21          40            6
22          41            4



begin processing of model array: I:\VisTrails\VisTrails_SAHM_x32_debug\VisTrails\vistrails\packages\sahm\Testing\tests\PARC_test\expectedOutputs\Simple MDS Builder\CovariateCorrelationOutputMDS_initial.csv 

file basename set to: I:\VisTrails\VisTrails_SAHM_x32_debug\VisTrails\vistrails\packages\sahm\Testing\tests\PARC_test\expectedOutputs\Simple MDS Builder\brt_1/brt 
Progress:20%

 Fitting BRT model 
The following object(s) are masked _by_ '.GlobalEnv':

    alpha, bag.fraction, learning.rate, make.binary.tif, make.p.tif,
    max.trees, MESS, n.folds, opt.methods, prev.stratify, save.model,
    seed, tc, tolerance, tolerance.method
The following object(s) are masked _by_ '.GlobalEnv':

    alpha, bag.fraction, learning.rate, make.binary.tif, make.p.tif,
    max.trees, MESS, n.folds, opt.methods, prev.stratify, save.model,
    seed, tc, tolerance, tolerance.method
The following object(s) are masked from 'out$input (position 3)':

    alpha, Append.Dir, bag.fraction, debug.mode, learning.rate,
    ma.name, make.binary.tif, make.p.tif, max.trees, MESS,
    model.family, n.folds, NoResidMaps, opt.methods, output.dir,
    prev.stratify, response.col, responseCurveForm, save.model,
    script.name, seed, simp.method, tc, tif.dir, tolerance,
    tolerance.method

tree complexity set to 3 
[1] 100
lr = 0.1   optimal n trees = 100 
[1] 100
lr = 0.06   optimal n trees = 100 
[1] 100
lr = 0.05   optimal n trees = 100 
[1] 100
lr = 0.04   optimal n trees = 100 
[1] 200
lr = 0.03   optimal n trees = 200 
[1] 200
lr = 0.02   optimal n trees = 200 
[1] 400
lr = 0.01   optimal n trees = 400 
[1] 900
lr = 0.005   optimal n trees = 900 

finished with learning rate estimation, lr= 0.005 , t= 3.98 sec

for final fit, lr= 0.0033 and tc= 3 

gbm.simplify - version 2.9 

simplifying gbm.step model for response with 10 predictors and 104 observations 
original deviance = 0.4757(0.1023)

variable removal will proceed until average change exceeds the original se

creating initial models...
done 

dropping predictor 1 
dropping predictor 2 
dropping predictor 3 
dropping predictor 4 
dropping predictor 5 
dropping predictor 6 
dropping predictor 7 
dropping predictor 8 

now processing final dropping of variables with full data 

1 - PRISM_bio_05_1971_2000_800m 
2 - PRISM_bio_17_1971_2000_800m 
3 - NDVI_annualMeanValue_Average 
4 - NDVI_seasonlengths1_Average 
5 - PRISM_bio_18_1971_2000_800m 
6 - PRISM_bio_15_1971_2000_800m 
7 - PRISM_bio_03_1971_2000_800m 
8 - PRISM_bio_07_1971_2000_800m 

finished with model simplification, t= 0.13 min

50%

Boosted Regression Tree Modeling Results


Data:
I:\VisTrails\VisTrails_SAHM_x32_debug\VisTrails\vistrails\packages\sahm\Testing\tests\PARC_test\expectedOutputs\Simple MDS Builder\CovariateCorrelationOutputMDS_initial.csv

	n(pres)=44
	n(abs)=60
	n covariates considered=11

Settings:

	random seed used =198762938
	tree complexity=3
	learning rate=0.0033
	n(trees)=1500
	model simplification=cross-validation
	n folds=3
	n covariates in final model=2
Relative influence of predictors in final model:

                          var  rel.inf
1 PRISM_bio_06_1971_2000_800m 77.49197
2                     romoveg 22.50803

Important interactions in final model:

NULL
40%
Progress:70%
The following object(s) are masked _by_ '.GlobalEnv':

    alpha, bag.fraction, learning.rate, make.binary.tif, make.p.tif,
    MESS, n.folds, opt.methods, prev.stratify, save.model, seed, tc,
    tolerance, tolerance.method

finished with final model summarization, t= 3.34 sec
Progress:80%

producing prediction maps... 
 
[1] 1
[1] 2
[1] 3
[1] 4



standard error:

Warning in read.ma(out) :
  Some levels for the categorical predictor romoveg do not have at least 10 observations.
You might want to consider removing or reclassifying this predictor before continuing.
Factors with few observations can cause failure in model fitting when the data is split and cannot be reilably used in training a model.
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Error in matrix(data = NaN, nrow = region.dims[1], ncol = region.dims[2]) : 
  invalid 'nrow' value (< 0)
Calls: FitModels -> proc.tiff -> ifelse -> matrix
Execution halted
